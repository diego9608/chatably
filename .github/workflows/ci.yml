name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Run Prettier check
        run: npx prettier --check .

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup Vitest
        run: |
          npm install -D vitest @vitest/ui happy-dom
          
      - name: Run unit tests
        run: npx vitest run --reporter=json --reporter=default --outputFile=test-results.json
        
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results.json

  storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Storybook
        run: npm run build-storybook
        
      - name: Upload Storybook build
        uses: actions/upload-artifact@v3
        with:
          name: storybook-static
          path: storybook-static

  lighthouse:
    name: Lighthouse Performance Tests
    runs-on: ubuntu-latest
    needs: [lint, unit-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          npm install -g @lhci/cli
          
      - name: Build site
        run: npm run build
        
      - name: Run Lighthouse CI
        run: |
          lhci autorun \
            --collect.numberOfRuns=3 \
            --collect.startServerCommand="npm run preview" \
            --collect.startServerReadyPattern="Local:" \
            --collect.url="http://localhost:3000/" \
            --collect.url="http://localhost:3000/dashboard.html" \
            --assert.preset="lighthouse:no-pwa" \
            --assert.assertions.largest-contentful-paint="error:1800" \
            --assert.assertions.cumulative-layout-shift="error:0.05" \
            --assert.assertions.total-blocking-time="error:125" \
            --assert.assertions.first-contentful-paint="warn:1000" \
            --assert.assertions.speed-index="warn:2000" \
            --upload.target="temporary-public-storage"
            
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: [lint, unit-test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          npm install -g @axe-core/cli serve
          
      - name: Build site
        run: npm run build
        
      - name: Start server
        run: serve -s dist -p 3000 &
        
      - name: Wait for server
        run: sleep 5
        
      - name: Run axe accessibility tests
        run: |
          axe http://localhost:3000 \
            http://localhost:3000/dashboard.html \
            --tags wcag2a,wcag2aa,wcag21a,wcag21aa \
            --disable color-contrast \
            --exit
            
      - name: Generate axe report
        if: failure()
        run: |
          axe http://localhost:3000 \
            http://localhost:3000/dashboard.html \
            --tags wcag2a,wcag2aa,wcag21a,wcag21aa \
            --save axe-report.json
            
      - name: Upload axe report
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: axe-report
          path: axe-report.json

  all-checks-passed:
    name: All CI Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, unit-test, storybook, lighthouse, accessibility]
    
    steps:
      - name: All checks passed
        run: echo "All CI checks have passed successfully!"